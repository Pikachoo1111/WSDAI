version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: wsdai_postgres
    environment:
      POSTGRES_DB: wsdai
      POSTGRES_USER: wsdai_user
      POSTGRES_PASSWORD: wsdai_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: wsdai_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # Main API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wsdai_api
    environment:
      - DATABASE_URL=postgresql://wsdai_user:wsdai_password@postgres:5432/wsdai
      - REDIS_URL=redis://redis:6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - DEBUG=false
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wsdai_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: wsdai_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
